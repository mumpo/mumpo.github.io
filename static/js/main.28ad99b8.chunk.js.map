{"version":3,"sources":["components/window/AppHeader.tsx","components/window/AppWindow.tsx","components/text-editor/styles/darkStyle.ts","components/text-editor/TextEditor.tsx","components/ThemeProvider.tsx","constants/sergiCode.ts","Main.tsx","serviceWorker.js","index.js"],"names":["Container","styled","div","Controls","Control","span","props","theme","app","control","color","Title","AppHeader","title","this","PureComponent","AppWindow","children","showHeader","defaultProps","darkStyle","SyntaxHighlighter","registerLanguage","typescript","Footer","FooterLanguage","TextEditor","code","language","style","showLineNumbers","lineNumberContainerStyle","background","textAlign","display","flexDirection","lineNumberStyle","width","height","wrapLines","lineProps","padding","backgroundColor","red","yellow","green","ThemeProvider","sergiCode","Main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28ad99b8.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { ThemeProps } from '../ThemeProvider';\n\ninterface AppHeaderProps {\n  title?: string;\n}\n\nconst Container = styled.div`\n  background: #e1e2e4;\n  height: 34px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Controls = styled.div`\n  flex-grow: 0;\n`;\n\ninterface ControlProps extends ThemeProps {\n  color: string;\n}\n\nconst Control = styled.span<ControlProps>`\n  width: 14px;\n  height: 14px;\n  margin-left: 7px;\n  border-radius: 50%;\n  display: inline-block;\n  background-color: ${props => props.theme.app.control[props.color]};\n`;\n\nconst Title = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  margin-right: 72px;\n`;\n\nclass AppHeader extends PureComponent<AppHeaderProps> {\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Container>\n        <Controls>\n          <Control color=\"red\" />\n          <Control color=\"yellow\" />\n          <Control color=\"green\" />\n        </Controls>\n\n        <Title>{title}</Title>\n      </Container>\n    );\n  }\n}\n\nexport default AppHeader;","import React, { PureComponent } from 'react';\nimport AppHeader from './AppHeader';\nimport styled from 'styled-components';\n\ninterface AppWindowProps {\n  showHeader?: boolean;\n  title?: string;\n}\n\nconst Container = styled.div`\n  -moz-box-shadow: 5px 5px 10px rgba(0,0,0,0.2);\n  -webkit-box-shadow: 5px 5px 10px rgba(0,0,0,0.2);\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.2);\n  background: #fff;\n  max-width: 800px;\n  margin: 50px auto;\n\n  @media (max-width: 600px) {\n    margin: 50px 10px;\n  }\n`;\n\nclass AppWindow extends PureComponent<AppWindowProps> {\n  static defaultProps: Partial<AppWindowProps> = {\n    showHeader: true\n  };\n\n  render() {\n    const { children, showHeader, title } = this.props;\n\n    return (\n      <Container>\n        { showHeader && <AppHeader title={title} />}\n        { children }\n      </Container>\n    );\n  }\n}\n\nexport default AppWindow;","export const darkStyle = {\n    \"code[class*=\\\"language-\\\"]\": {\n        \"color\": \"#c5c8c6\",\n        \"textShadow\": \"0 1px rgba(0, 0, 0, 0.3)\",\n        \"fontFamily\": \"Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace\",\n        \"direction\": \"ltr\",\n        \"textAlign\": \"left\",\n        \"whiteSpace\": \"pre\",\n        \"wordSpacing\": \"normal\",\n        \"wordBreak\": \"normal\",\n        \"lineHeight\": \"1.5\",\n        \"MozTabSize\": \"4\",\n        \"OTabSize\": \"4\",\n        \"tabSize\": \"4\",\n        \"WebkitHyphens\": \"none\",\n        \"MozHyphens\": \"none\",\n        \"msHyphens\": \"none\",\n        \"hyphens\": \"none\",\n        \"padding\": \"0.5em 0\",\n    },\n    \"code:nth-child(1)\": {\n        \"padding-left\": \"0.5em\",\n        \"paddingRight\": \"0.5em\"\n    },\n    \"pre[class*=\\\"language-\\\"]\": {\n        \"display\": \"flex\",\n        \"color\": \"#c5c8c6\",\n        \"textShadow\": \"0 1px rgba(0, 0, 0, 0.3)\",\n        \"fontFamily\": \"Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace\",\n        \"textAlign\": \"left\",\n        \"whiteSpace\": \"pre\",\n        \"wordSpacing\": \"normal\",\n        \"wordBreak\": \"normal\",\n        \"lineHeight\": \"1.5\",\n        \"MozTabSize\": \"4\",\n        \"OTabSize\": \"4\",\n        \"tabSize\": \"4\",\n        \"WebkitHyphens\": \"none\",\n        \"MozHyphens\": \"none\",\n        \"msHyphens\": \"none\",\n        \"hyphens\": \"none\",\n        \"margin\": \"0\",\n        \"overflow\": \"auto\",\n        \"background\": \"#31394a\"\n    },\n    \":not(pre) > code[class*=\\\"language-\\\"]\": {\n        \"background\": \"#1d1f21\",\n        \"padding\": \".1em\",\n        \"borderRadius\": \".3em\"\n    },\n    \"comment\": {\n        \"color\": \"#7d8b94\"\n    },\n    \"prolog\": {\n        \"color\": \"#7d8b94\"\n    },\n    \"doctype\": {\n        \"color\": \"#7d8b94\"\n    },\n    \"cdata\": {\n        \"color\": \"#7d8b94\"\n    },\n    \"punctuation\": {\n        \"color\": \"#c5c8c6\"\n    },\n    \".namespace\": {\n        \"Opacity\": \".7\"\n    },\n    \"property\": {\n        \"color\": \"#96CBFE\"\n    },\n    \"keyword\": {\n        \"color\": \"#ea5b65\"\n    },\n    \"tag\": {\n        \"color\": \"#96CBFE\"\n    },\n    \"class-name\": {\n        \"color\": \"#e6c277\",\n    },\n    \"maybe-class-name\": {\n        \"color\": \"#e6c277\",\n    },\n    \"boolean\": {\n        \"color\": \"#99CC99\"\n    },\n    \"constant\": {\n        \"color\": \"#99CC99\"\n    },\n    \"symbol\": {\n        \"color\": \"#f92672\"\n    },\n    \"deleted\": {\n        \"color\": \"#f92672\"\n    },\n    \"number\": {\n        \"color\": \"#3dacec\"\n    },\n    \"selector\": {\n        \"color\": \"#7bc36d\"\n    },\n    \"attr-name\": {\n        \"color\": \"#7bc36d\"\n    },\n    \"string\": {\n        \"color\": \"#7bc36d\"\n    },\n    \"char\": {\n        \"color\": \"#7bc36d\"\n    },\n    \"builtin\": {\n        \"color\": \"#3dacec\"\n    },\n    \"inserted\": {\n        \"color\": \"#3dacec\"\n    },\n    \"variable\": {\n        \"color\": \"#C6C5FE\"\n    },\n    \"operator\": {\n        \"color\": \"#ea5b65\"\n    },\n    \"entity\": {\n        \"color\": \"#e6c277\",\n        \"cursor\": \"help\"\n    },\n    \"url\": {\n        \"color\": \"#96CBFE\"\n    },\n    \".language-css .token.string\": {\n        \"color\": \"#87C38A\"\n    },\n    \".style .token.string\": {\n        \"color\": \"#87C38A\"\n    },\n    \"atrule\": {\n        \"color\": \"#F9EE98\"\n    },\n    \"attr-value\": {\n        \"color\": \"#F9EE98\"\n    },\n    \"function\": {\n        \"color\": \"#c06fd4\"\n    },\n    \"regex\": {\n        \"color\": \"#E9C062\"\n    },\n    \"important\": {\n        \"color\": \"#fd971f\",\n        \"fontWeight\": \"bold\"\n    },\n    \"bold\": {\n        \"fontWeight\": \"bold\"\n    },\n    \"italic\": {\n        \"fontStyle\": \"italic\"\n    }\n}","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport typescript from 'react-syntax-highlighter/dist/esm/languages/prism/typescript';\nimport { darkStyle } from './styles/darkStyle';\n\nSyntaxHighlighter.registerLanguage('typescript', typescript);\n\nconst Container = styled.div`\n  color: #dcdfe2;\n  background: #31394a;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  color: #717a84;\n  background: #242935;\n  flex-direction: row-reverse;\n  padding:0 20px;\n  border-top: 1px solid #434a54;\n`;\n\nconst FooterLanguage = styled.span`\n  transition: color .2s ease-in-out;\n  &:hover {\n    color: #ddd;\n  }\n`;\n\ninterface TextEditorProps {\n  code: string;\n  language: string;\n}\n\nclass TextEditor extends PureComponent<TextEditorProps> {\n  render() {\n    const { code, language } = this.props;\n    return (\n      <Container>\n        <SyntaxHighlighter\n          language=\"typescript\"\n          style={darkStyle}\n          showLineNumbers={true}\n          lineNumberContainerStyle={{\n            color: '#dcdfe2',\n            background: '#2b3140',\n            textAlign: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n          lineNumberStyle={{\n            width: '50px',\n            height: '25px'\n          }}\n          wrapLines={true}\n          lineProps={{\n            style: {\n              width: '100%',\n              padding: \"0 0.5em\",\n              '&:hover': {\n                backgroundColor: '#000'\n              },\n            }\n          } as React.HTMLAttributes<HTMLElement>}\n        >\n          {code}\n        </SyntaxHighlighter>\n        <Footer>\n          <FooterLanguage>\n            {language}\n          </FooterLanguage>\n        </Footer>\n      </Container>\n    )\n  }\n}\n\nexport default TextEditor;\n","import React, { PureComponent } from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\n\nconst theme = {\n  app: {\n    control: {\n      red: '#e74c3c',\n      yellow: '#f1c40f',\n      green: '#2ecc71'\n    }\n  }\n};\n\nexport type Theme = typeof theme;\nexport interface ThemeProps {\n  theme: Theme\n};\n\nclass ThemeProvider extends PureComponent {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StyledThemeProvider theme={theme}>\n        {children}\n      </StyledThemeProvider>\n    );\n  }\n}\n\nexport default ThemeProvider;","export const sergiCode =\n`import React, { PureComponent } from 'react';\n\ninterface SergiProps {\n  /** Half of the fun is the movie, the other half is popcorn **/\n  cinema: boolean;\n  /** Music is the best tool to express myself **/\n  piano: boolean;\n  /** Cliffs share the best from two world (mountain and sea) **/\n  nature: boolean;\n  /** Number of puns I need to do per minute **/\n  puns: number;\n}\n\n/** This is me! Pretty much functional **/\nclass Sergi extends PureComponent<SergiProps> {\n  render() {\n    const { cinema, piano, nature, puns } = this.props;\n\n    if (cinema && piano && nature && puns >= 1) {\n      return '😄';\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Sergi;`;","import React from 'react';\nimport './Main.css';\nimport AppWindow from './components/window/AppWindow';\nimport TextEditor from './components/text-editor/TextEditor';\nimport ThemeProvider from './components/ThemeProvider';\nimport { sergiCode } from './constants/sergiCode';\n\nfunction Main() {\n  return (\n    <ThemeProvider>\n      <AppWindow title=\"Sergi Férriz\">\n        <TextEditor\n          code={sergiCode}\n          language=\"Typescript\"\n        ></TextEditor>\n      </AppWindow>\n    </ThemeProvider>\n  );\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}